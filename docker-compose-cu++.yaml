#
# Copyright 2021-2024 Software Radio Systems Limited
#
# This file is part of srsRAN
#
# srsRAN is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of
# the License, or (at your option) any later version.
#
# srsRAN is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# A copy of the GNU Affero General Public License can be found in
# the LICENSE file in the top-level directory of this distribution
# and at http://www.gnu.org/licenses/.
#

services:
  5gc:
    container_name: open5gs_5gc
    build:
      context: RAN/srsRAN_Project/docker/open5gs
      target: open5gs
      args:
        OS_VERSION: "22.04"
        OPEN5GS_VERSION: "v2.7.0"
    env_file:
      - ${OPEN_5GS_ENV_FILE:-RAN/srsRAN_Project/docker/open5gs/open5gs.env}
    privileged: true
    ports:
      - "9999:9999/tcp"
    # Uncomment port to use the 5gc from outside the docker network
      - "38412:38412/sctp"
      - "2152:2152/udp"
    command: 5gc -c open5gs-5gc.yml
    healthcheck:
      test: [ "CMD-SHELL", "nc -z 127.0.0.20 7777" ]
      interval: 3s
      timeout: 1s
      retries: 60
    networks:
      oran-intel:
        ipv4_address: ${OPEN5GS_IP:-10.53.1.2}

  cu0:
    container_name: srscu0
    image: srsran:split_8_zmq
    build:
      context: RAN/srsRAN_Project/
      dockerfile: docker/Dockerfile
      args:
        OS_VERSION: "22.04"
    # stdin_open: true # docker run -i
    # tty: true        # docker run -t
    privileged: true
    cap_add:
      - SYS_NICE
      - CAP_SYS_PTRACE
    volumes:
      - /dev/bus/usb/:/dev/bus/usb/
      - /usr/share/uhd/images:/usr/share/uhd/images
      - ./RAN/entrypoint_0.sh:/tmp/entrypoint.sh
      - ./RAN/cu_0.yml:/config/cu.conf
    networks:
      oran-intel:
        ipv4_address: 10.53.1.240
    depends_on:
      5gc:
        condition: service_healthy
    command:  bash -c 'chmod +x /tmp/entrypoint.sh && /tmp/entrypoint.sh && srscu -c /config/cu.conf'
    deploy:
      resources:
        limits:
          cpus: "4.0"
          memory: 3G
        reservations:
          cpus: "3.0"
          memory: 2G
    # cpuset: "0,1,2"

  cu1:
    container_name: srscu1
    image: srsran:split_8_zmq
    # stdin_open: true # docker run -i
    # tty: true        # docker run -t
    privileged: true
    cap_add:
      - SYS_NICE
      - CAP_SYS_PTRACE
    volumes:
      - /dev/bus/usb/:/dev/bus/usb/
      - /usr/share/uhd/images:/usr/share/uhd/images
      - ./RAN/entrypoint_1.sh:/tmp/entrypoint.sh
      - ./RAN/cu_1.yml:/config/cu.conf
    networks:
      oran-intel:
        ipv4_address: 10.53.1.140
    depends_on:
      5gc:
        condition: service_healthy
    command:  bash -c 'chmod +x /tmp/entrypoint.sh && /tmp/entrypoint.sh && srscu -c /config/cu.conf'
    deploy:
      resources:
        limits:
          cpus: "4.0"
          memory: 3G
        reservations:
          cpus: "3.0"
          memory: 2G
    # cpuset: "3,4,5"
  
  cu2:
    container_name: srscu2
    image: srsran:split_8_zmq
    # stdin_open: true # docker run -i
    # tty: true        # docker run -t
    privileged: true
    cap_add:
      - SYS_NICE
      - CAP_SYS_PTRACE
    volumes:
      - /dev/bus/usb/:/dev/bus/usb/
      - /usr/share/uhd/images:/usr/share/uhd/images
      - ./RAN/entrypoint_2.sh:/tmp/entrypoint.sh
      - ./RAN/cu_2.yml:/config/cu.conf
    networks:
      oran-intel:
        ipv4_address: 10.53.1.80
    depends_on:
      5gc:
        condition: service_healthy
    command:  bash -c 'chmod +x /tmp/entrypoint.sh && /tmp/entrypoint.sh && srscu -c /config/cu.conf'
    deploy:
      resources:
        limits:
          cpus: "4.0"
          memory: 3G
        reservations:
          cpus: "3.0"
          memory: 2G
    # cpuset: "6,7,8"

  cu3:
    container_name: srscu3
    image: srsran:split_8_zmq
    # stdin_open: true # docker run -i
    # tty: true        # docker run -t
    privileged: true
    cap_add:
      - SYS_NICE
      - CAP_SYS_PTRACE
    volumes:
      - /dev/bus/usb/:/dev/bus/usb/
      - /usr/share/uhd/images:/usr/share/uhd/images
      - ./RAN/entrypoint_3.sh:/tmp/entrypoint.sh
      - ./RAN/cu_3.yml:/config/cu.conf
    networks:
      oran-intel:
        ipv4_address: 10.53.1.90
    depends_on:
      5gc:
        condition: service_healthy
    command:  bash -c 'chmod +x /tmp/entrypoint.sh && /tmp/entrypoint.sh && srscu -c /config/cu.conf'
    deploy:
      resources:
        limits:
          cpus: "4.0"
          memory: 3G
        reservations:
          cpus: "3.0"
          memory: 2G
    # cpuset: "9,10,11"


volumes:
  gnb-storage:
  grafana-storage:
  influxdb-storage:
  prometheus-storage:
    driver: local
    driver_opts:
      type: none
      device: ./setup/prometheus/
      o: bind


networks:
  oran-intel:
    external: true
